-- ================================
-- Create Tables for VideoGameCRM (MySQL / XAMPP)
-- ================================

CREATE DATABASE IF NOT EXISTS VideoGameCRM;
USE VideoGameCRM;

-- 1. Games Table
CREATE TABLE Games (
    game_id INT AUTO_INCREMENT PRIMARY KEY,
    app_id VARCHAR(50) NOT NULL,
    app_name VARCHAR(255) NOT NULL,
    genre VARCHAR(100),
    release_date DATE,
    developer VARCHAR(255),
    publisher VARCHAR(255)
);

-- 2. Reviewers Table
CREATE TABLE Reviewers (
    reviewer_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100) NOT NULL,
    profile_url VARCHAR(255),
    total_reviews INT DEFAULT 0,
    total_helpfulness_votes INT DEFAULT 0
);

-- 3. Reviews Table
CREATE TABLE Reviews (
    review_id INT AUTO_INCREMENT PRIMARY KEY,
    game_id INT NOT NULL,
    review_text TEXT,
    review_score ENUM('Recommended','Not Recommended'),
    predicted_sentiment ENUM('Positive','Negative','Neutral'),
    confidence_score DECIMAL(5,2),
    review_votes INT DEFAULT 0,
    review_date DATE,
    reviewer_id INT,
    FOREIGN KEY (game_id) REFERENCES Games(game_id),
    FOREIGN KEY (reviewer_id) REFERENCES Reviewers(reviewer_id)
);

-- 4. Sentiment_Summary Table
CREATE TABLE Sentiment_Summary (
    summary_id INT AUTO_INCREMENT PRIMARY KEY,
    game_id INT NOT NULL,
    date_range_start DATE,
    date_range_end DATE,
    positive_count INT DEFAULT 0,
    negative_count INT DEFAULT 0,
    neutral_count INT DEFAULT 0,
    avg_confidence DECIMAL(5,2),
    trend_direction ENUM('Up','Down','Stable'),
    FOREIGN KEY (game_id) REFERENCES Games(game_id)
);

-- 5. Users Table
CREATE TABLE Users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    email VARCHAR(150) UNIQUE,
    role ENUM('Admin','Analyst','Marketing'),
    password_hash VARCHAR(255)
);

-- 6. Alerts Table
CREATE TABLE Alerts (
    alert_id INT AUTO_INCREMENT PRIMARY KEY,
    game_id INT NOT NULL,
    alert_type VARCHAR(100),
    alert_message TEXT,
    alert_date DATE,
    status ENUM('Open','Assigned','Resolved') DEFAULT 'Open',
    assigned_to INT,
    FOREIGN KEY (game_id) REFERENCES Games(game_id),
    FOREIGN KEY (assigned_to) REFERENCES Users(user_id)
);

-- 7. Tags Table
CREATE TABLE Tags (
    tag_id INT AUTO_INCREMENT PRIMARY KEY,
    tag_name VARCHAR(100) UNIQUE
);

-- 8. Review_Tags Table (junction table)
CREATE TABLE Review_Tags (
    review_id INT NOT NULL,
    tag_id INT NOT NULL,
    PRIMARY KEY (review_id, tag_id),
    FOREIGN KEY (review_id) REFERENCES Reviews(review_id),
    FOREIGN KEY (tag_id) REFERENCES Tags(tag_id)
);

-- 9. Model_History Table
CREATE TABLE Model_History (
    model_id INT AUTO_INCREMENT PRIMARY KEY,
    model_name VARCHAR(100),
    version VARCHAR(50),
    date_uploaded DATE,
    precision DECIMAL(5,2),
    recall DECIMAL(5,2),
    f1_score DECIMAL(5,2)
);
